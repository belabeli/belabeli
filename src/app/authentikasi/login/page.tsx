"use client";

import Link from "next/link";
import { useState, useEffect } from "react";
import { useRouter } from "next/navigation";
import Image from "next/image";
import postLogin from "@/api/login";
import BackNav from "../../components/backNavigasi";
import saveAccount from "@/cookie/saveAccount";
import LayoutUtama from "@/app/layouts/layout-utama";
import Header from "@/app/layouts/header";

type LoginResponse = {
  code: number;
  message: string;
  data: {
    access_token: string;
    refresh_token: string;
    expires_in: number;
    token_type: string;
    username: string;
    email: string;
    phone: string;
  };
};

const Login = () => {
  const [emailPhone, setEmailPhone] = useState<string>("");
  const [password, setPassword] = useState<string>("");
  const [resData, setResData] = useState<any>(null);
  const [resErr, setResErr] = useState<any>(null);
  const [isPasswordVisible, setIsPasswordVisible] = useState<boolean>(false);

  const togglePasswordVisibility = () => {
    setIsPasswordVisible(!isPasswordVisible);
  };

  // const [error, setError] = useState<string>('');

  const router = useRouter();

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    // const data = { emailPhone, password };

    try {
      const response = await postLogin({
        account: emailPhone,
        password: password,
      });

      const dataResponse: LoginResponse = response.data;

      console.log(dataResponse);
      setResData(dataResponse);

      console.log(dataResponse.code);
      console.log(dataResponse.message);

      await saveAccount(dataResponse.data);

      router.push("/");
    } catch (error: any) {
      console.log(error.response);
      setResErr(error.response);
    }
  };

  useEffect(() => {
    console.log(resErr);
  }, [resErr]);

  const SpanError = () => {
    {
      if (
        resErr !== null &&
        resErr?.data?.code > 400 &&
        resErr?.data?.code <= 499
      ) {
        return (
          <>
            <p className="text-red-400 text-xs underline">
              {resErr.data.message}
            </p>
          </>
        );
      }

      if (resErr?.data?.message == "Something Wrong") {
        return (
          <>
            <p className="text-red-400 text-xs underline">
              Email or password wrong
            </p>
          </>
        );
      }
    }
  };

  return (
    <>
      <LayoutUtama>
        <Header children={undefined} />
        <div className="w-[150px] flex py-2 items-center justify-between flex-col mt-[92px] h-[150px]  mx-auto font-nunito">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="75"
            height="81"
            viewBox="0 0 75 81"
            fill="none"
          >
            <path
              d="M17.0797 18.4637C9.07095 18.0322 9.86752 10.5162 11.2669 6.812C-0.601171 22.4346 -0.594281 37.4089 1.57886 40.904C6.57358 29.6839 15.7163 27.8858 19.6632 28.3892C28.9637 15.7018 39.5194 11.1756 43.0222 10.0486C51.7416 7.24354 54.2175 15.6587 36.6711 30.5469C38.824 32.4457 46.1439 36.8043 46.6821 41.7671C30.3203 57.1948 40.3313 64.0995 26.3372 64.0995C14.7977 64.1858 7.82227 55.5047 5.77701 51.1532C-2.74847 71.8673 15.0704 79.2036 25.0455 80.2824C56.5639 85.3746 78.8828 56.6554 74.0242 40.0409C70.3642 27.5261 54.5402 26.4473 46.6821 27.3104C63.9055 17.4927 60.1377 2.28078 56.8007 1.52558C51.2032 -3.22141 36.3125 5.22974 29.5666 10.0486L17.0797 18.4637Z"
              fill="url(#paint0_linear_6304_23187)"
            />
            <path
              d="M31.1815 30.4391L25.4763 29.2523C25.9426 28.1374 28.5765 23.858 37.5325 17.3848C46.4886 10.9117 47.2206 14.0404 41.946 19.5426L31.1815 30.4391Z"
              fill="url(#paint1_linear_6304_23187)"
            />
            <defs>
              <linearGradient
                id="paint0_linear_6304_23187"
                x1="0.470112"
                y1="40.502"
                x2="74.689"
                y2="40.502"
                gradientUnits="userSpaceOnUse"
              >
                <stop stopColor="#51DC73" />
                <stop offset="1" stopColor="#009BBC" />
              </linearGradient>
              <linearGradient
                id="paint1_linear_6304_23187"
                x1="0.470106"
                y1="40.502"
                x2="74.689"
                y2="40.502"
                gradientUnits="userSpaceOnUse"
              >
                <stop stopColor="#51DC73" />
                <stop offset="1" stopColor="#009BBC" />
              </linearGradient>
            </defs>
          </svg>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="195"
            height="39"
            viewBox="0 0 195 39"
            fill="none"
          >
            <path
              d="M11.0172 38.8935C10.156 38.8935 9.10542 38.859 7.86535 38.7899C6.62528 38.7209 5.35077 38.6173 4.0418 38.4792C2.76729 38.3411 1.63055 38.2203 0.631607 38.1167V1.71163H7.55533V13.1562C8.07203 12.949 8.70929 12.7419 9.46711 12.5348C10.2249 12.3276 11.0172 12.155 11.8439 12.0169C12.7051 11.8443 13.4973 11.758 14.2207 11.758C16.632 11.758 18.5437 12.2586 19.956 13.2598C21.4028 14.2264 22.4362 15.6764 23.0562 17.6097C23.6762 19.543 23.9863 21.977 23.9863 24.9115C23.9863 28.3638 23.5901 31.1257 22.7979 33.1971C22.04 35.234 20.7139 36.7013 18.8193 37.5989C16.9248 38.462 14.3241 38.8935 11.0172 38.8935ZM11.0689 33.0935C12.7567 33.0935 14.014 32.8001 14.8407 32.2132C15.6675 31.5918 16.2186 30.6769 16.4942 29.4686C16.8042 28.2602 16.9592 26.7757 16.9592 25.015C16.9592 23.2198 16.8214 21.7871 16.5458 20.7168C16.2703 19.6121 15.8052 18.818 15.1508 18.3347C14.5307 17.8169 13.6523 17.5579 12.5156 17.5579C11.9645 17.5579 11.3789 17.627 10.7589 17.7651C10.1388 17.8687 9.536 18.0067 8.95041 18.1794C8.39927 18.3175 7.93424 18.4555 7.55533 18.5936V32.8864C8.07203 32.9209 8.67484 32.9727 9.36377 33.0418C10.0527 33.0763 10.6211 33.0935 11.0689 33.0935ZM40.2605 38.8935C37.4014 38.8935 35.128 38.4102 33.4401 37.4435C31.7867 36.4768 30.5983 35.0096 29.8749 33.0418C29.1515 31.0739 28.7898 28.6055 28.7898 25.6365C28.7898 22.4258 29.2376 19.802 30.1332 17.7651C31.0633 15.7282 32.4067 14.2264 34.1635 13.2598C35.9202 12.2586 38.0903 11.758 40.6738 11.758C44.4974 11.758 47.3736 12.7246 49.3026 14.658C51.2661 16.5913 52.2478 19.6466 52.2478 23.824L51.9378 27.6561H35.7135C35.748 29.5894 36.1441 31.0394 36.9019 32.0061C37.6598 32.9727 38.9687 33.456 40.8288 33.456C41.8967 33.456 43.0678 33.4388 44.3424 33.4043C45.6169 33.3352 46.8742 33.2662 48.1143 33.1971C49.3888 33.1281 50.4738 33.059 51.3694 32.99L51.5244 37.806C50.6633 37.9441 49.5782 38.0995 48.2693 38.2721C46.9603 38.4447 45.5997 38.5828 44.1874 38.6864C42.8095 38.8244 41.5005 38.8935 40.2605 38.8935ZM35.7135 23.2543H45.3758C45.3758 20.9067 44.9968 19.2669 44.239 18.3347C43.5157 17.4026 42.3273 16.9365 40.6738 16.9365C39.5715 16.9365 38.6587 17.1437 37.9353 17.5579C37.212 17.9722 36.6608 18.6454 36.2819 19.5776C35.903 20.5097 35.7135 21.7353 35.7135 23.2543ZM58.0574 38.3239V1.71163H64.9295V38.3239H58.0574ZM78.6208 38.8935C75.934 38.8935 73.9017 38.2203 72.5238 36.8739C71.1804 35.4929 70.5087 33.4215 70.5087 30.6596C70.5087 28.7263 70.8532 27.2245 71.5421 26.1543C72.231 25.0496 73.2472 24.2555 74.5906 23.7722C75.9685 23.2543 77.6391 22.9436 79.6026 22.84L85.9062 22.2704V20.7168C85.9062 19.474 85.5962 18.6109 84.9762 18.1276C84.3562 17.6097 83.4433 17.3508 82.2377 17.3508C81.2732 17.3508 80.1537 17.3853 78.8792 17.4544C77.6391 17.5234 76.399 17.6097 75.159 17.7133C73.9533 17.8169 72.9027 17.9204 72.0071 18.024L71.8005 13.1562C72.6961 12.949 73.7639 12.7419 75.004 12.5348C76.2785 12.2931 77.6047 12.1032 78.9825 11.9651C80.3604 11.827 81.6349 11.758 82.8061 11.758C85.0107 11.758 86.8535 12.0342 88.3347 12.5866C89.8159 13.1389 90.9354 14.0538 91.6932 15.3312C92.4511 16.574 92.83 18.2657 92.83 20.4061V32.265C92.8989 32.7483 93.1572 33.1281 93.605 33.4043C94.0528 33.6459 94.5695 33.8185 95.1551 33.9221L95.0001 38.6864C94.4489 38.6864 93.8978 38.6864 93.3467 38.6864C92.83 38.7209 92.3305 38.7209 91.8483 38.6864C91.366 38.6864 90.9354 38.6518 90.5565 38.5828C89.7643 38.4792 89.0753 38.2721 88.4897 37.9614C87.9386 37.6506 87.4908 37.3227 87.1463 36.9774C86.5952 37.2191 85.8546 37.4953 84.9245 37.806C83.9945 38.1167 82.9783 38.3756 81.876 38.5828C80.8082 38.7899 79.7231 38.8935 78.6208 38.8935ZM80.2743 33.7667C80.9288 33.7667 81.6177 33.6977 82.341 33.5596C83.0644 33.4215 83.7361 33.2662 84.3562 33.0935C85.0106 32.8864 85.5273 32.6965 85.9062 32.5239V26.5686L80.636 27.0347C79.4992 27.1382 78.6725 27.4835 78.1558 28.0704C77.6736 28.6227 77.4324 29.4168 77.4324 30.4525C77.4324 31.4882 77.6563 32.2995 78.1041 32.8864C78.5864 33.4733 79.3098 33.7667 80.2743 33.7667ZM122.551 38.8935C121.69 38.8935 120.639 38.859 119.399 38.7899C118.159 38.7209 116.884 38.6173 115.575 38.4792C114.301 38.3411 113.164 38.2203 112.165 38.1167V1.71163H119.089V13.1562C119.606 12.949 120.243 12.7419 121.001 12.5348C121.758 12.3276 122.551 12.155 123.377 12.0169C124.239 11.8443 125.031 11.758 125.754 11.758C128.166 11.758 130.077 12.2586 131.49 13.2598C132.936 14.2264 133.97 15.6764 134.59 17.6097C135.21 19.543 135.52 21.977 135.52 24.9115C135.52 28.3638 135.124 31.1257 134.331 33.1971C133.574 35.234 132.247 36.7013 130.353 37.5989C128.458 38.462 125.858 38.8935 122.551 38.8935ZM122.602 33.0935C124.29 33.0935 125.548 32.8001 126.374 32.2132C127.201 31.5918 127.752 30.6769 128.028 29.4686C128.338 28.2602 128.493 26.7757 128.493 25.015C128.493 23.2198 128.355 21.7871 128.079 20.7168C127.804 19.6121 127.339 18.818 126.684 18.3347C126.064 17.8169 125.186 17.5579 124.049 17.5579C123.498 17.5579 122.912 17.627 122.292 17.7651C121.672 17.8687 121.07 18.0067 120.484 18.1794C119.933 18.3175 119.468 18.4555 119.089 18.5936V32.8864C119.606 32.9209 120.208 32.9727 120.897 33.0418C121.586 33.0763 122.155 33.0935 122.602 33.0935ZM151.794 38.8935C148.935 38.8935 146.662 38.4102 144.974 37.4435C143.32 36.4768 142.132 35.0096 141.409 33.0418C140.685 31.0739 140.324 28.6055 140.324 25.6365C140.324 22.4258 140.771 19.802 141.667 17.7651C142.597 15.7282 143.94 14.2264 145.697 13.2598C147.454 12.2586 149.624 11.758 152.208 11.758C156.031 11.758 158.907 12.7246 160.836 14.658C162.8 16.5913 163.782 19.6466 163.782 23.824L163.472 27.6561H147.247C147.282 29.5894 147.678 31.0394 148.436 32.0061C149.194 32.9727 150.502 33.456 152.363 33.456C153.43 33.456 154.602 33.4388 155.876 33.4043C157.151 33.3352 158.408 33.2662 159.648 33.1971C160.923 33.1281 162.008 33.059 162.903 32.99L163.058 37.806C162.197 37.9441 161.112 38.0995 159.803 38.2721C158.494 38.4447 157.133 38.5828 155.721 38.6864C154.343 38.8244 153.034 38.8935 151.794 38.8935ZM147.247 23.2543H156.91C156.91 20.9067 156.531 19.2669 155.773 18.3347C155.049 17.4026 153.861 16.9365 152.208 16.9365C151.105 16.9365 150.192 17.1437 149.469 17.5579C148.746 17.9722 148.195 18.6454 147.816 19.5776C147.437 20.5097 147.247 21.7353 147.247 23.2543ZM169.591 38.3239V1.71163H176.463V38.3239H169.591ZM183.386 38.3239V12.3276H190.258V38.3239H183.386Z"
              fill="#21405E"
            />
            <path
              d="M182.189 5.52087L183.386 8.18523L194.245 4.22322V2.23358L193.463 0.416992L182.189 5.52087Z"
              fill="#E43A34"
            />
          </svg>
        </div>
        <form
          onSubmit={handleSubmit}
          className="flex flex-col px-5 mt-[49px] gap-4 font-nunito"
        >
          <div className="border w-full h-[53px] rounded-lg px-2 pt-4 bg-[#f1f1f1] relative">
            <span className="absolute text-xs left-2 top-1">
              Nomor ponsel atau email
            </span>
            <input
              value={emailPhone}
              onChange={(e) => setEmailPhone(e.target.value)}
              type="text"
              className="font-bold w-full outline-none h-full bg-[#f1f1f1]"
            />
            <div className="w-full pt-1">
              <p className="text-red-400 text-xs underline">
                {resErr && resErr.data.error?.account?.[0] !== undefined
                  ? resErr.data.error.account[0]
                  : ""}
              </p>
            </div>
          </div>

          <div className="border w-full h-[53px] rounded-lg px-2 pt-4 bg-[#f1f1f1] relative mt-2">
            <span className="absolute text-xs left-2 top-1">Password</span>
            <input
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              type={isPasswordVisible ? "text" : "password"}
              className="font-bold w-full h-full bg-[#f1f1f1] outline-none"
            />
            {isPasswordVisible ? (
              <button
                type="button"
                className="absolute right-3 top-4"
                onClick={togglePasswordVisibility}
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                >
                  <path
                    d="M17.8827 19.2968C16.1814 20.3755 14.1638 21.0002 12.0003 21.0002C6.60812 21.0002 2.12215 17.1204 1.18164 12.0002C1.61832 9.62283 2.81932 7.5129 4.52047 5.93457L1.39366 2.80777L2.80788 1.39355L22.6069 21.1925L21.1927 22.6068L17.8827 19.2968ZM5.9356 7.3497C4.60673 8.56015 3.6378 10.1672 3.22278 12.0002C4.14022 16.0521 7.7646 19.0002 12.0003 19.0002C13.5997 19.0002 15.112 18.5798 16.4243 17.8384L14.396 15.8101C13.7023 16.2472 12.8808 16.5002 12.0003 16.5002C9.51498 16.5002 7.50026 14.4854 7.50026 12.0002C7.50026 11.1196 7.75317 10.2981 8.19031 9.60442L5.9356 7.3497ZM12.9139 14.328L9.67246 11.0866C9.5613 11.3696 9.50026 11.6777 9.50026 12.0002C9.50026 13.3809 10.6196 14.5002 12.0003 14.5002C12.3227 14.5002 12.6309 14.4391 12.9139 14.328ZM20.8068 16.5925L19.376 15.1617C20.0319 14.2268 20.5154 13.1586 20.7777 12.0002C19.8603 7.94818 16.2359 5.00016 12.0003 5.00016C11.1544 5.00016 10.3329 5.11773 9.55249 5.33818L7.97446 3.76015C9.22127 3.26959 10.5793 3.00016 12.0003 3.00016C17.3924 3.00016 21.8784 6.87993 22.8189 12.0002C22.5067 13.6998 21.8038 15.2628 20.8068 16.5925ZM11.7229 7.50857C11.8146 7.503 11.9071 7.50016 12.0003 7.50016C14.4855 7.50016 16.5003 9.51488 16.5003 12.0002C16.5003 12.0933 16.4974 12.1858 16.4919 12.2775L11.7229 7.50857Z"
                    fill="black"
                  />
                </svg>
              </button>
            ) : (
              <button
                type="button"
                className="absolute right-3 top-4"
                onClick={togglePasswordVisibility}
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="25"
                  viewBox="0 0 24 25"
                  fill="none"
                >
                  <path
                    d="M12.0003 3.0658C17.3924 3.0658 21.8784 6.94556 22.8189 12.0658C21.8784 17.186 17.3924 21.0658 12.0003 21.0658C6.60812 21.0658 2.12215 17.186 1.18164 12.0658C2.12215 6.94556 6.60812 3.0658 12.0003 3.0658ZM12.0003 19.0658C16.2359 19.0658 19.8603 16.1178 20.7777 12.0658C19.8603 8.01383 16.2359 5.0658 12.0003 5.0658C7.7646 5.0658 4.14022 8.01383 3.22278 12.0658C4.14022 16.1178 7.7646 19.0658 12.0003 19.0658ZM12.0003 16.5658C9.51498 16.5658 7.50026 14.5511 7.50026 12.0658C7.50026 9.58052 9.51498 7.5658 12.0003 7.5658C14.4855 7.5658 16.5003 9.58052 16.5003 12.0658C16.5003 14.5511 14.4855 16.5658 12.0003 16.5658ZM12.0003 14.5658C13.381 14.5658 14.5003 13.4465 14.5003 12.0658C14.5003 10.6851 13.381 9.5658 12.0003 9.5658C10.6196 9.5658 9.50026 10.6851 9.50026 12.0658C9.50026 13.4465 10.6196 14.5658 12.0003 14.5658Z"
                    fill="black"
                  />
                </svg>
              </button>
            )}
            <div className="w-full pt-1">
              <p className="text-red-400 text-xs underline">
                {resErr && resErr.data.error?.password?.[0] !== undefined
                  ? resErr.data.error.password[0]
                  : ""}
              </p>
            </div>
            <SpanError />
          </div>

          <p className="text-green-600 text-xs underline">
            {resData && resData.message !== undefined ? resData.message : ""}
          </p>

          <button className="w-full text-white mt-1 rounded-lg h-[50px] flex items-center justify-center bg-[#51D7B1]">
            Masuk
          </button>
          <p className="text-center">
            <Link
              href={"/authentikasi/lupa-sandi"}
              className="font-nunito text-[12px]"
            >
              Lupa kata sandi?
            </Link>
          </p>
        </form>

        <Link
          href={"/authentikasi/registrasi"}
          className="bg-[#51D7B1] mt-8 flex justify-center space-x-4 py-3 mx-5  rounded-md border"
        >
          <span className="font-nunito text-white">Buat akun baru</span>
        </Link>
      </LayoutUtama>
    </>
  );
};

export default Login;
